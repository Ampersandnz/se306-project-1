import os

class ActorListBuilder:
    def __init__(self, pathBase):
        self.actors = []
        self.pathBase = pathBase
        self.actorTypes = set(os.listdir(os.path.join(self.pathBase, "actors")))

    def add(self, actorTokens):
        self.actors.append(actorTokens)

    def getStageEnd(self):
        outStrList = []
        outStrList.append("# This file is automatically generated by se306_p1_pkg/world/updateactors.py\n")
        default = "default"
        usedActors = set()
        for actor in self.actors:
            if actor[0] in self.actorTypes:
                usedActors.add(actor[0])
            else:
                usedActors.add(default)

        for usedActor in sorted(usedActors):
            outStrList.append("include \"actors/%s\"\n" % (usedActor))
        
        for actor in self.actors:
            if actor[0] in usedActors:
                outStrList.append("%s( name \"%s\" pose [ %s %s 0 %s ] color \"%s\")\n" % (actor[0], actor[0], actor[1], actor[2], actor[3], actor[4]))
            else:
                outStrList.append("%s( name \"%s\" pose [ %s %s 0 %s ] color \"%s\")\n" % (default, actor[0], actor[1], actor[2], actor[3], actor[4]))
        
        return "".join(outStrList)

    def getBashEnd(self):
        outStrList = []
        outStrList.append("#!/bin/bash\n")
        outStrList.append("# This file is automatically generated by se306_p1_pkg/world/updateactors.py\n")
        outStrList.append("export ROS_PACKAGE_PATH=`pwd`:$ROS_PACKAGE_PATH\n\n")
        outStrList.append("source devel/setup.bash\n")
        outStrList.append("roscore & ROSCORE_PID=$!\n")

        for i in range(len(self.actors)):
            actor = self.actors[i]
            outStrList.append("rosrun se306_p1_pkg ActorSpawner %d %s & ROBOT%d_PID=$!\n" % (i, actor[0], i))

        outStrList.append("\nrosrun stage_ros stageros src/se306_p1_pkg/world/myworld.world\n\n")

        for i in range(len(self.actors)):
            outStrList.append("kill $ROBOT%d_PID\n" % (i))
        outStrList.append("kill $ROSCORE_PID")

        return "".join(outStrList)

if __name__ == "__main__":
    pathBase = os.path.dirname(__file__)
    actorLB = ActorListBuilder(pathBase)
    
    for line in open(os.path.join(pathBase, "actorlist"), "r"):
        tokens = line.split("#")[0].split()
        if len(tokens) == 5:
            actorLB.add(tokens)

    fOutStage = open(os.path.join(pathBase, "__autogen__donteditme__actorlist__"), "w")
    fOutStage.write(actorLB.getStageEnd())
    fOutStage.close()

    fOutBash = open(os.path.join(pathBase, "../../../run.sh"), "w")
    fOutBash.write(actorLB.getBashEnd())
    fOutBash.close()
